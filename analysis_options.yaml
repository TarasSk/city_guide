include: package:flutter_lints/flutter.yaml

analyzer:
  # TODO(implement) later
  #  strong-mode:
  #     Stricter type checks.
  #    implicit-casts: false
  #    implicit-dynamic: false
  exclude:
    - "build/**"
    - "**/*.g.dart"
    - "**/*.gr.dart"
    - "**/*.freezed.dart"
    - "**/*.mocks.dart"
    - "**/*.gql.g.dart"
  plugins:
    - dart_code_metrics
  errors:
    missing_required_param: error

# For disable rule in file use `// ignore_for_file: name_of_lint`
# syntax on for the line `// ignore: name_of_lint`
# avoid_print: false  # Uncomment to disable the `avoid_print` rule
# prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options

linter:
  rules:
    #   All actual lints
    #   https://dart-lang.github.io/linter/lints/index.html.
    #   https://dart-lang.github.io/linter/lints/options/options.html
    #   for check what rule means https://dart-lang.github.io/linter/lints/name_of_lint.html
    #   where name_of_lint your rule

    always_declare_return_types: true
    always_put_control_body_on_new_line: true
    always_put_required_named_parameters_first: true
    always_specify_types: false # Incompatible with unnecessary_final, omit_local_variable_types,
    always_use_package_imports: true
    annotate_overrides: true
    avoid_annotating_with_dynamic: true
    avoid_bool_literals_in_conditional_expressions: true
    avoid_catches_without_on_clauses: false # some exceptions not extends [Exception]
    avoid_catching_errors: true
    avoid_classes_with_only_static_members: true
    avoid_double_and_int_checks: true
    avoid_dynamic_calls: true
    avoid_empty_else: true
    avoid_equals_and_hash_code_on_mutable_classes: true
    avoid_escaping_inner_quotes: true
    avoid_field_initializers_in_const_classes: true
    avoid_final_parameters: true
    avoid_function_literals_in_foreach_calls: true
    avoid_implementing_value_types: true
    avoid_init_to_null: true
    avoid_js_rounded_ints: true
    avoid_multiple_declarations_per_line: true
    avoid_null_checks_in_equality_operators: true
    avoid_positional_boolean_parameters: true
    avoid_print: true
    avoid_private_typedef_functions: true
    avoid_redundant_argument_values: true
    avoid_relative_lib_imports: true
    avoid_renaming_method_parameters: true
    avoid_return_types_on_setters: true
    avoid_returning_null_for_void: true
    avoid_returning_this: true
    avoid_setters_without_getters: true
    avoid_shadowing_type_parameters: true
    avoid_single_cascade_in_expression_statements: true
    avoid_slow_async_io: true
    avoid_type_to_string: true
    avoid_types_as_parameter_names: true
    avoid_types_on_closure_parameters: true
    avoid_unnecessary_containers: true
    avoid_unused_constructor_parameters: true
    avoid_void_async: true
    avoid_web_libraries_in_flutter: true
    await_only_futures: true
    camel_case_extensions: true
    camel_case_types: true
    cancel_subscriptions: true
    cascade_invocations: true
    cast_nullable_to_non_nullable: true # EXPERIMENTAL
    close_sinks: true
    collection_methods_unrelated_type: true
    combinators_ordering: true
    comment_references: true
    conditional_uri_does_not_exist: true
    constant_identifier_names: true
    control_flow_in_finally: true
    curly_braces_in_flow_control_structures: true
    dangling_library_doc_comments: true
    depend_on_referenced_packages: false
    deprecated_consistency: true
    diagnostic_describe_all_properties: true
    directives_ordering: true
    discarded_futures: false
    do_not_use_environment: true
    empty_catches: true
    empty_constructor_bodies: true
    empty_statements: true
    eol_at_end_of_file: true
    exhaustive_cases: true
    file_names: true
    flutter_style_todos: true
    hash_and_equals: true
    implementation_imports: true
    implicit_call_tearoffs: true # EXPERIMENTAL
    join_return_with_assignment: true
    leading_newlines_in_multiline_strings: true
    library_annotations: true
    library_names: true
    library_prefixes: true
    library_private_types_in_public_api: true
    lines_longer_than_80_chars: false # we have agreed standard as 100 chars
    literal_only_boolean_expressions: true
    missing_whitespace_between_adjacent_strings: true
    no_adjacent_strings_in_list: true
    no_default_cases: true # EXPERIMENTAL
    no_duplicate_case_values: true
    no_leading_underscores_for_library_prefixes: true
    no_leading_underscores_for_local_identifiers: true
    no_logic_in_create_state: true
    no_runtimeType_toString: true
    non_constant_identifier_names: true
    noop_primitive_operations: true
    null_check_on_nullable_type_parameter: true
    null_closures: true
    omit_local_variable_types: true
    one_member_abstracts: false # todo check we need it e.g. DataSource or Repository, we'll implement it in Impl
    only_throw_errors: true
    overridden_fields: true
    package_names: true
    package_prefixed_library_names: true
    parameter_assignments: true
    prefer_adjacent_string_concatenation: true
    prefer_asserts_in_initializer_lists: true
    prefer_asserts_with_message: true
    prefer_collection_literals: true
    prefer_conditional_assignment: true
    prefer_const_constructors: true
    prefer_const_constructors_in_immutables: true
    prefer_const_declarations: true
    prefer_const_literals_to_create_immutables: true
    prefer_constructors_over_static_methods: true
    prefer_contains: true
    prefer_double_quotes: false # we use prefer_single_quotes
    prefer_expression_function_bodies: false # todo create rule with exceptions e.g. build method
    prefer_final_fields: true
    prefer_final_in_for_each: true
    prefer_final_locals: true
    prefer_final_parameters: false # we use parameter_assignments with avoid_final_parameters
    prefer_for_elements_to_map_fromIterable: true
    prefer_foreach: true
    prefer_function_declarations_over_variables: true
    prefer_generic_function_type_aliases: true
    prefer_if_elements_to_conditional_expressions: true
    prefer_if_null_operators: true
    prefer_initializing_formals: true
    prefer_inlined_adds: true
    prefer_int_literals: true
    prefer_interpolation_to_compose_strings: true
    prefer_is_empty: true
    prefer_is_not_empty: true
    prefer_is_not_operator: true
    prefer_iterable_whereType: true
    prefer_mixin: true
    prefer_null_aware_method_calls: true
    prefer_null_aware_operators: true
    prefer_relative_imports: false # we use always_use_package_imports
    prefer_single_quotes: true
    prefer_spread_collections: true
    prefer_typing_uninitialized_variables: true
    prefer_void_to_null: true
    provide_deprecation_message: true
    public_member_api_docs: false # todo implement later, to many documentation
    recursive_getters: true
    require_trailing_commas: true # EXPERIMENTAL
    secure_pubspec_urls: true
    sized_box_for_whitespace: true
    sized_box_shrink_expand: true
    slash_for_doc_comments: true
    sort_child_properties_last: true
    sort_constructors_first: true
    sort_pub_dependencies: false # sorted by category, not alphabetically
    sort_unnamed_constructors_first: true
    test_types_in_equals: true
    throw_in_finally: true
    tighten_type_of_initializing_formals: true
    type_annotate_public_apis: true
    type_init_formals: true
    unawaited_futures: true
    unnecessary_await_in_return: true
    unnecessary_brace_in_string_interps: true
    unnecessary_const: true
    unnecessary_constructor_name: true
    unnecessary_final: false # incompatible with prefer_final_fields
    unnecessary_getters_setters: true
    unnecessary_lambdas: true
    unnecessary_late: true
    unnecessary_library_directive: true
    unnecessary_new: true
    unnecessary_null_aware_assignments: true
    unnecessary_null_aware_operator_on_extension_on_nullable: false
    unnecessary_null_checks: true # EXPERIMENTAL
    unnecessary_null_in_if_null_operators: true
    unnecessary_nullable_for_final_variable_declarations: true # EXPERIMENTAL
    unnecessary_overrides: true
    unnecessary_parenthesis: true
    unnecessary_raw_strings: true
    unnecessary_statements: true
    unnecessary_string_escapes: true
    unnecessary_string_interpolations: true
    unnecessary_this: true
    unnecessary_to_list_in_spreads: true
    unreachable_from_main: true # EXPERIMENTAL
    unrelated_type_equality_checks: true
    use_build_context_synchronously: false # EXPERIMENTAL
    use_colored_box: true
    use_decorated_box: true
    use_enums: true # EXPERIMENTAL
    use_full_hex_values_for_flutter_colors: true
    use_function_type_syntax_for_parameters: true
    use_if_null_to_convert_nulls_to_bools: true
    use_is_even_rather_than_modulo: true
    use_key_in_widget_constructors: true
    use_late_for_private_fields_and_variables: true # EXPERIMENTAL
    use_named_constants: true
    use_raw_strings: true
    use_rethrow_when_possible: true
    use_setters_to_change_properties: true
    use_string_buffers: true
    use_string_in_part_of_directives: true
    use_super_parameters: true # EXPERIMENTAL
    use_test_throws_matchers: true
    use_to_and_as_if_applicable: true
    valid_regexps: true
    void_checks: true

dart_code_metrics:
  extends:
    - package:dart_code_metrics/presets/all.yaml
  anti-patterns:
    - long-method
    - long-parameter-list
  metrics-exclude:
    - test/**
    - lib/**/*.gr.dart
    - lib/**/*.g.dart
    - test/**/*.mocks.dart
    - lib/**/*.freezed.dart
    - lib/**/*.gql.g.dart
    #    TODO remove, it will be replaced with codegen
    - lib/features/broadband/data/api/**
    - lib/string_finder.dart # This is a demo and internal test class
  metrics:
    # cyclomatic-complexity: 20
    maximum-nesting-level: 5
    number-of-parameters: 4
    # todo should be 50 later
    source-lines-of-code: 160
  rules-exclude:
    - test/**/*.mocks.dart
    - lib/**/*.gr.dart
    - lib/**/*.g.dart
    - lib/**/*.freezed.dart
    - lib/**/*.gql.g.dart
    #    TODO remove, it will be replaced with codegen
    - lib/features/broadband/data/api/**
  rules:
    #   Common
    - arguments-ordering: false # naming parameters are most often used and this is not so important in this case, but prefer-trailing-comma is removed during auto sorting
    # - avoid-banned-imports
    - avoid-cascade-after-if-null
    - avoid-collection-methods-with-unrelated-types
    - avoid-double-slash-imports
    - avoid-duplicate-exports
    - avoid-dynamic
    - avoid-global-state
    - avoid-late-keyword: false # useful for controllers and other thins
    - avoid-missing-enum-constant-in-map: false
    - avoid-nested-conditional-expressions:
        - acceptable-level: 2
    - avoid-non-ascii-symbols: false # it's not allow use use symbols as "'" or "<p>" in strings
    - avoid-non-null-assertion
    - avoid-passing-async-when-sync-expected
    - avoid-redundant-async: false
    - avoid-ignoring-return-values: false
    - avoid-throw-in-catch-block
    - avoid-top-level-members-in-tests: false
    - avoid-unnecessary-conditionals
    - avoid-unnecessary-type-assertions
    - avoid-unnecessary-type-casts
    - avoid-unrelated-type-assertions
    - avoid-unused-parameters: false
    - avoid-substring: false
    # - ban-name
    - binary-expression-operand-order
    - double-literal-format
    - format-comment
    # https://dartcodemetrics.dev/docs/rules/common/member-ordering
    - member-ordering:
        alphabetize: false
        order:
          # Constructors
          - constructors
          - named-constructors
          - factory-constructors
          - static-methods
          # Fields
          - public-const-fields
          - private-const-fields
          - public-static-fields
          - private-static-fields
          - public-final-fields
          - private-final-fields
          - public-var-fields
          - private-var-fields
          - overridden-fields
          # Getters, setters
          - public-getters-setters
          - private-getters-setters
          # Methods
          - public-methods
          - overridden-methods
          - protected-methods
          - private-methods
        widgets-order:
          # Constructors
          - constructors
          - named-constructors
          - factory-constructors
          - static-methods
          # Fields
          - public-const-fields
          - private-const-fields
          - public-static-fields
          - private-static-fields
          - public-final-fields
          - private-final-fields
          - public-var-fields
          - private-var-fields
          - overridden-fields
          # Getters, setters
          - public-getters-setters
          - private-getters-setters
          # Methods
          - init-state-method
          - dispose-method
          - public-methods
          - overridden-methods
          - protected-methods
          - private-methods
          - build-method
          - debug-fill-properties-method
    - missing-test-assertion
    - newline-before-return
    - no-boolean-literal-compare
    - no-empty-block: false # enable if we need it
    - no-equal-arguments: false # in widgets we need it for paddings, height, width
    - no-equal-then-else
    - no-magic-number: false # for paddings, size, flex
      #        we ofter use this numbers in UI
    #        allowed: [ 0, 2, 4, 6, 8, 12, 16, 24, 32, 48, 56, 64, 128, 256, 512, 1024 ]
    - no-object-declaration
    - prefer-async-await
    - prefer-commenting-analyzer-ignores: false
    - prefer-conditional-expressions
    - prefer-correct-identifier-length:
        exceptions: [ '' ]
        max-identifier-length: 35
        min-identifier-length: 2
    - prefer-correct-test-file-name: false
    - prefer-correct-type-name:
        excluded: [ '' ]
        min-length: 3
        max-length: 35
    - prefer-enums-by-name
    - prefer-first
    - prefer-immediate-return
    - prefer-iterable-of
    - prefer-last
    - prefer-moving-to-variable: false
    - prefer-static-class
    - prefer-trailing-comma:
        break-on: 3
    - tag-name
    #   Flutter
    - always-remove-listener
    - avoid-border-all
    - avoid-expanded-as-spacer
    - avoid-returning-widgets:
        ignored-names:
          - shopBBTVTestWrapper
          - wrapForTest
        ignored-annotations:
          - allowedAnnotation
    - avoid-shrink-wrap-in-lists
    - avoid-unnecessary-setstate
    - avoid-wrapping-in-padding
    - check-for-equals-in-render-object-setters
    - consistent-update-render-object
    - prefer-const-border-radius
    - prefer-correct-edge-insets-constructor
    - prefer-extracting-callbacks
    - prefer-single-widget-per-file:
        ignore-private-widgets: true
    - prefer-using-list-view
    - use-setstate-synchronously:
        methods:
          - setState
    - prefer-match-file-name: false
        # exclude:
        #   - test/**
        #   - integration_test/**
